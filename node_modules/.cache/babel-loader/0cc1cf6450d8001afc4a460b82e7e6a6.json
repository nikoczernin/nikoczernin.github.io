{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Scoreboard from './Scoreboard';\nexport default {\n  name: 'GameOver',\n  data: function data() {\n    return {\n      winningTeam: 0,\n      teams: []\n    };\n  },\n  props: {\n    scores: Object,\n    recentGame: Object\n  },\n  components: {\n    Scoreboard: Scoreboard\n  },\n  mounted: function mounted() {\n    // set the variable winningTeam\n    // if its a draw, it stays at zero!\n    if (this.scores.team1 > this.scores.team2) {\n      this.winningTeam = 1;\n    } else if (this.scores.team1 < this.scores.team2) {\n      this.winningTeam = 2;\n    } // set a list of all winners to diplay\n\n\n    this.recentGame.setup.playersTeams;\n    this.teams.push(this.recentGame.setup.playersTeams.filter(function (player) {\n      return player.team == 1;\n    }));\n    this.teams.push(this.recentGame.setup.playersTeams.filter(function (player) {\n      return player.team == 2;\n    }));\n  },\n  methods: {}\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AAEA;EACAA,gBADA;EAGAC,IAHA,kBAGA;IACA;MACAC,cADA;MAEAC;IAFA;EAIA,CARA;EASAC;IACAC,cADA;IAEAC;EAFA,CATA;EAaAC;IACAC;EADA,CAbA;EAkBAC,OAlBA,qBAkBA;IACA;IACA;IACA;MACA;IACA,CAFA,MAGA;MACA;IACA,CARA,CASA;;;IACA;IACA;MAAA;IAAA;IACA;MAAA;IAAA;EACA,CA/BA;EAgCAC;AAhCA","names":["name","data","winningTeam","teams","props","scores","recentGame","components","Scoreboard","mounted","methods"],"sourceRoot":"src/components/games/charades/play","sources":["GameOver.vue"],"sourcesContent":["<template>\n    <div class=\"rounded-lg px-4 py-6 text-center floating\">\n        <h2>Game over!</h2>\n        <h1 v-if=\"winningTeam != 0\">\n            <span :class=\"[winningTeam == 1 ? 'text1' : 'text2', 'winner']\">Team {{winningTeam}}</span> won!\n        </h1>\n        <h1 v-if=\"winningTeam == 0\">\n            It's a draw!\n        </h1>\n        <Scoreboard\n            :progress=\"recentGame.progress\"\n        />\n\n        <div class=\"teamShowcase\" v-if=\"winningTeam > 0\">\n            <h3>These are the winners:</h3>\n            <span\n                v-for=\"(player,id) in teams[winningTeam]\"\n                :key=id\n                >\n                    <span v-if=\"id!=0\"> â€“ </span>\n                    {{player.name}}</span>\n        </div>\n\n        <div class=\"mt-3\">\n            <router-link to=\"/\">\n                <v-btn\n                    color=\"success\"\n                    elevation=0\n                    @click=\"$emit('endRecentGame')\"\n                >Go back home</v-btn>\n            </router-link>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Scoreboard from './Scoreboard'\n\nexport default {\n    name: 'GameOver',\n\n    data(){\n        return {\n            winningTeam: 0, \n            teams: [],\n        }\n    },\n    props: {\n        scores: Object,\n        recentGame: Object,\n    },\n    components: {\n        Scoreboard\n    },\n\n\n    mounted(){\n        // set the variable winningTeam\n        // if its a draw, it stays at zero!\n        if (this.scores.team1 > this.scores.team2){\n            this.winningTeam = 1;\n        }\n        else if (this.scores.team1 < this.scores.team2){\n            this.winningTeam = 2;\n        }\n        // set a list of all winners to diplay\n        this.recentGame.setup.playersTeams\n        this.teams.push(this.recentGame.setup.playersTeams.filter(player => player.team == 1))\n        this.teams.push(this.recentGame.setup.playersTeams.filter(player => player.team == 2))\n    },\n    methods:{\n    }\n\n}\n</script>\n\n\n<style scoped>\n\n\n\n\n.text1{\n    color: var(--v-primary-darken1);\n}\n.text2{\n    color: var(--v-secondary-darken1);\n}\n\n.box1{\n        background: var(--v-primary-base);\n        box-shadow: inset 5px 5px 8px var(--v-primary-darken1);\n    }\n\n.box2{\n    background: var(--v-secondary-base);\n    box-shadow: inset 5px 5px 8px var(--v-secondary-darken1);\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}