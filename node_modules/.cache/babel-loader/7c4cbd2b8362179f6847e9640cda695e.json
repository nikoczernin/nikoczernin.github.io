{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//:class=\"scores.team1 < scores.team2 ? 'flex-grow-3' : 'flex-shrink-1'\"\nimport LineGraph from './LineGraph.vue';\nexport default {\n  name: 'Scoreboard',\n  components: {\n    LineGraph: LineGraph\n  },\n  props: {\n    progress: Array\n  },\n  data: function data() {\n    return {\n      loaded: false,\n      scoresPerTeam: [[], []],\n      score1: 0,\n      score2: 0,\n      totalScoresPerTeam: [{\n        name: 'Team 1',\n        data: [0]\n      }, {\n        name: 'Team 2',\n        data: [0]\n      }]\n    };\n  },\n  methods: {\n    sum: function sum(arr) {\n      var sum = arr.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      return sum;\n    },\n    getScoresPerTeam: function getScoresPerTeam() {\n      for (var i = 0; i < this.progress.length; i++) {\n        var turn = this.progress[i];\n        this.scoresPerTeam[turn.team - 1].push(turn.points);\n      }\n    },\n    getTotalScoresPerRound: function getTotalScoresPerRound() {\n      for (var team = 0; team < 2; team++) {\n        for (var round = 0; round < this.scoresPerTeam[0].length; round++) {\n          // take the score of round i of each team\n          var newScore = this.scoresPerTeam[team][round]; // add it to the total score up until round i of each team\n\n          var previousScore = this.totalScoresPerTeam[team].data[round];\n          var totalScore = newScore + previousScore; // push both values in an array to the totalScoresPerRound\n\n          this.totalScoresPerTeam[team].data.push(totalScore);\n        }\n      }\n\n      this.score1 = this.sum(this.scoresPerTeam[0]);\n      this.score2 = this.sum(this.scoresPerTeam[1]);\n    }\n  },\n  mounted: function mounted() {\n    console.log(\"Start\"); // i created this flag to add the classes after the page is loaded\n    // so that the flex property could be animated\n\n    this.loaded = true; // make an array with the scores earned by each team for each round and put that in a bigger array\n\n    this.getScoresPerTeam();\n    this.getTotalScoresPerRound();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AAEA;AAEA;EACAA,kBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;EADA,CALA;EASAC,IATA,kBASA;IACA;MACAC,aADA;MAEAC,uBAFA;MAGAC,SAHA;MAIAC,SAJA;MAKAC,qBACA;QACAV,cADA;QAEAK;MAFA,CADA,EAKA;QACAL,cADA;QAEAK;MAFA,CALA;IALA;EAgBA,CA1BA;EA2BAM;IACAC,GADA,eACAC,GADA,EACA;MACA;QACA;MACA,CAFA,EAEA,CAFA;MAGA;IACA,CANA;IAOAC,gBAPA,8BAOA;MACA;QACA;QACA;MACA;IACA,CAZA;IAaAC,sBAbA,oCAaA;MACA;QACA;UACA;UACA,+CAFA,CAGA;;UACA;UACA,0CALA,CAMA;;UACA;QACA;MACA;;MACA;MACA;IACA;EA3BA,CA3BA;EAwDAC,OAxDA,qBAwDA;IACAC,qBADA,CAEA;IACA;;IACA,mBAJA,CAKA;;IACA;IACA;EACA;AAhEA","names":["name","components","LineGraph","props","progress","data","loaded","scoresPerTeam","score1","score2","totalScoresPerTeam","methods","sum","arr","getScoresPerTeam","getTotalScoresPerRound","mounted","console"],"sourceRoot":"src/components/games/charades/play","sources":["Scoreboard.vue"],"sourcesContent":["<template>\n        <div>\n            <!--\n            <div>\n                {{totalScoresPerTeam}} \n            </div>\n            <div>\n                {{scoresPerTeam}}\n            </div>\n            -->\n            <v-row class=\"scoreboard mt-2 mb-5 flex-nowrap\">\n                <v-col\n                :class=\"loaded & score1 > score2 ? 'big' : 'small'\"\n                >\n                    <div class=\"scoreBlock team1 rounded-pill\">{{score1}}</div>\n                </v-col>\n                <v-col\n                :class=\"loaded & score1 < score2 ? 'big' : 'small'\"\n                >\n                    <div class=\"scoreBlock team2 rounded-pill\">{{score2}}</div>\n                </v-col>\n            </v-row>\n            <v-row>\n                <LineGraph\n                    :data=\"totalScoresPerTeam\"\n                    :pointSize=3\n                    :showXLabs=true\n                    :showYLabs=true\n                    class=\"mb-3\"\n                    />\n            </v-row>\n        </div>\n\n</template>\n\n<script>\n//:class=\"scores.team1 < scores.team2 ? 'flex-grow-3' : 'flex-shrink-1'\"\n\nimport LineGraph from './LineGraph.vue'\n\nexport default {\n    name: 'Scoreboard',\n    components: {\n        LineGraph\n    },\n    props: {\n            progress: Array,\n        },\n\n    data(){\n        return {\n            loaded: false,\n            scoresPerTeam: [[],[]],\n            score1: 0,\n            score2: 0,\n            totalScoresPerTeam: [\n                {\n                    name: 'Team 1',\n                    data: [0]\n                },\n                {\n                    name: 'Team 2',\n                    data: [0]\n                },\n            ],            \n        }\n    },\n    methods: {\n        sum(arr){\n            var sum = arr.reduce(function(a, b){\n                return a + b;\n            }, 0);\n            return sum;\n        },\n        getScoresPerTeam(){\n            for (let i=0; i < this.progress.length; i++) {\n                var turn = this.progress[i]\n                this.scoresPerTeam[turn.team - 1].push(turn.points)\n            }\n        },\n        getTotalScoresPerRound(){\n            for (let team=0; team < 2; team++) {\n                for (let round=0; round < this.scoresPerTeam[0].length; round++) {\n                    // take the score of round i of each team\n                    let newScore = this.scoresPerTeam[team][round]\n                    // add it to the total score up until round i of each team\n                    let previousScore = this.totalScoresPerTeam[team].data[round]\n                    let totalScore = newScore + previousScore\n                    // push both values in an array to the totalScoresPerRound\n                    this.totalScoresPerTeam[team].data.push(totalScore)\n                }\n            }\n            this.score1 = this.sum(this.scoresPerTeam[0])\n            this.score2 = this.sum(this.scoresPerTeam[1])\n        },\n    },\n    mounted(){\n        console.log(\"Start\")\n        // i created this flag to add the classes after the page is loaded\n        // so that the flex property could be animated\n        this.loaded = true;\n        // make an array with the scores earned by each team for each round and put that in a bigger array\n        this.getScoresPerTeam()\n        this.getTotalScoresPerRound()\n    },\n}\n</script>\n\n\n<style scoped>\n\n.scoreBlock{\n    height: 50px;\n    color: rgba(255,255,255,0.5);\n    overflow: hidden;\n    font-size: 2.6em;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    flex: 1;\n    transition: flex .8s ease-in-out;\n\n}\n\n.team1{\n    background: var(--v-primary-base);\n    box-shadow: inset 5px 5px 8px var(--v-primary-darken1);\n}\n\n.team2{\n    background: var(--v-secondary-base);\n    box-shadow: inset 5px 5px 8px var(--v-secondary-darken1);\n}\n\n.big {\n    flex: 10;\n}\n.small {\n    flex: 6;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}