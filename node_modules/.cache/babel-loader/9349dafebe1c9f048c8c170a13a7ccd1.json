{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SetupRules from './SetupRules';\nimport Setup2Teams from './Setup2Teams';\nimport SetupTerms from './SetupTerms';\nexport default {\n  name: 'CharadesSetup',\n  components: {\n    SetupRules,\n    // set the general rules of the game\n    Setup2Teams,\n    // divide the players into two teams\n    SetupTerms // let every player create some terms for the game\n\n  },\n  props: ['players', 'recentGame'],\n\n  data() {\n    return {\n      playersTeams: [],\n      rules: [],\n      terms: [],\n      setupCategories: ['Rules', 'Teams', 'Terms'],\n      selectedSetupCategoriyID: 0\n    };\n  },\n\n  mounted() {\n    // import the players list and make it into a teams list\n    this.players.forEach(player => {\n      if (this.playersTeams.length >= this.players.length / 2) {\n        this.playersTeams.push({\n          name: player,\n          team: 1\n        });\n      } else {\n        this.playersTeams.push({\n          name: player,\n          team: 2\n        });\n      }\n    });\n  },\n\n  methods: {\n    changeTeam(id) {\n      if (this.playersTeams[id].team === 1) {\n        this.playersTeams[id].team = 2;\n      } else {\n        this.playersTeams[id].team = 1;\n      }\n    },\n\n    rulesChanged(rules) {\n      this.rules = rules;\n    },\n\n    submitTerm(newTerm) {\n      this.terms.push(newTerm);\n    },\n\n    startGame() {\n      this.$emit('startGame', {\n        playersTeams: this.playersTeams,\n        rules: this.rules,\n        terms: this.terms\n      });\n      this.$router.push('play');\n    },\n\n    autoSetup() {\n      this.terms = [[\"Penis\", \"Niko\"], [\"Hose\", \"Niko\"], [\"Affe\", \"Niko\"], [\"Kind\", \"Jan\"], [\"Lol\", \"Maximilian Emilio Vintschgau\"], [\"Adriano Celentano\", \"Dr Doom\"], [\"Cunt\", \"Henry\"]];\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AAEA;EACAA,qBADA;EAEAC;IACAC,UADA;IACA;IACAC,WAFA;IAEA;IACAC,UAHA,CAGA;;EAHA,CAFA;EAOAC,QACA,SADA,EACA,YADA,CAPA;;EAUAC;IACA;MACAC,gBADA;MAEAC,SAFA;MAGAC,SAHA;MAIAC,4CAJA;MAKAC;IALA;EAOA,CAlBA;;EAmBAC;IACA;IACA;MACA;QACA;UAAAZ;UAAAa;QAAA;MACA,CAFA,MAEA;QACA;UAAAb;UAAAa;QAAA;MACA;IACA,CANA;EAOA,CA5BA;;EA8BAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAPA;;IAQAC;MACA;IACA,CAVA;;IAYAC;MACA;IACA,CAdA;;IAgBAC;MACA;QACAX,+BADA;QAEAC,iBAFA;QAGAC;MAHA;MAKA;IACA,CAvBA;;IAyBAU;MACA;IACA;;EA3BA;AA9BA","names":["name","components","SetupRules","Setup2Teams","SetupTerms","props","data","playersTeams","rules","terms","setupCategories","selectedSetupCategoriyID","mounted","team","methods","changeTeam","rulesChanged","submitTerm","startGame","autoSetup"],"sourceRoot":"src/components/games/charades/setup","sources":["CharadesSetup.vue"],"sourcesContent":["<template>\n    <div>\n        <v-row class=\"d-flex justify-center text-center my-2\">\n            <h2>Game Setup</h2>\n        </v-row>\n        <v-row class=\"d-flex align-center justify-space-around text-center my-2\">\n            <v-btn \n                class=\"\" \n                color=\"primary\" \n                @click=\"autoSetup\" \n                elevation=\"0\"\n                >Auto-Setup</v-btn>\n            <v-btn \n                elevation=\"0\"\n                color=\"success\"\n                class=\"start-game-button\"\n                @click=\"startGame\"\n                :disabled=\"terms.length<players.length\"\n                >Start Game</v-btn> \n        </v-row>\n\n        <v-row class=\"setupCategorySelection d-flex justify-space-around text-center my-8\">\n            <div \n            v-for=\"(category, categoryId) in setupCategories\"\n            :key=\"categoryId\"\n            :class=\"['setup-category', selectedSetupCategoriyID == categoryId ? 'setup-category-selected' : '']\"\n            @click=\"selectedSetupCategoriyID = categoryId\"\n            >{{category}}</div>\n        </v-row>\n\n        <transition name=\"fade\" mode=\"out-in\">\n                <SetupRules \n                key=2\n                @rulesChanged=\"rulesChanged\"\n                v-if=\"selectedSetupCategoriyID == 0\"\n                class=\"setup\"\n                />\n\n                <Setup2Teams \n                key=1\n                v-if=\"selectedSetupCategoriyID == 1\"\n                :playersTeams=playersTeams \n                @changeTeam=\"changeTeam\"\n                class=\"setup\"\n                />\n\n                <SetupTerms \n                key=3\n                v-if=\"selectedSetupCategoriyID == 2\"\n                :terms=\"terms\" \n                :termsPerPlayer=3 \n                :players=\"players\" \n                @submitTerm=\"submitTerm\"\n                class=\"setup\"\n                />\n        </transition>\n\n\n        <div class=\"d-flex justify-space-around\">\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport SetupRules from './SetupRules'\nimport Setup2Teams from './Setup2Teams'\nimport SetupTerms from './SetupTerms'\n\nexport default {\n    name: 'CharadesSetup',\n    components: {\n        SetupRules, // set the general rules of the game\n        Setup2Teams, // divide the players into two teams\n        SetupTerms, // let every player create some terms for the game\n    },\n    props: [\n        'players', 'recentGame'\n    ],\n    data(){\n        return{\n            playersTeams: [],\n            rules: [],\n            terms: [],\n            setupCategories: ['Rules', 'Teams', 'Terms'],\n            selectedSetupCategoriyID: 0,\n        }\n    },\n    mounted(){\n        // import the players list and make it into a teams list\n        this.players.forEach(player => {\n            if (this.playersTeams.length >= (this.players.length / 2)){\n                this.playersTeams.push({name: player, team: 1})\n            } else {\n                this.playersTeams.push({name: player, team: 2})\n            }\n        });\n    },\n\n    methods: {\n        changeTeam(id){\n            if (this.playersTeams[id].team === 1){\n                this.playersTeams[id].team = 2\n            } else {\n                this.playersTeams[id].team = 1\n            }\n        },\n        rulesChanged(rules){\n            this.rules = rules\n        },\n\n        submitTerm(newTerm){\n            this.terms.push(newTerm)\n        },\n\n        startGame(){\n            this.$emit('startGame', {\n                playersTeams: this.playersTeams, \n                rules: this.rules, \n                terms: this.terms\n                })\n            this.$router.push('play')\n        },\n\n        autoSetup(){\n            this.terms = [ [ \"Penis\", \"Niko\" ], [ \"Hose\", \"Niko\" ], [ \"Affe\", \"Niko\" ], [ \"Kind\", \"Jan\" ], [ \"Lol\", \"Maximilian Emilio Vintschgau\" ], [ \"Adriano Celentano\", \"Dr Doom\" ], [ \"Cunt\", \"Henry\" ] ]\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .setup-category {\n        padding: 2px 12px;\n        border-radius: 10px;\n        box-shadow:  \n            -4px -4px 10px var(--v-background-lighten1),\n            4px 4px 10px var(--v-background-darken1)\n            ;\n        transition: all .5s;\n    }\n\n    .setup-category-selected {\n        background: var(--v-success-base);\n        border-color: var(--v-success-base);\n        color: #fff;\n    }\n\n\n.setup{\n    transition: all .2s !important;\n    position: relative !important;\n}\n\n.fade-enter, .fade-leave-to {\n\topacity: 0;\n}\n\n.fade-leave-active {\n\t position: relative;\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module"}