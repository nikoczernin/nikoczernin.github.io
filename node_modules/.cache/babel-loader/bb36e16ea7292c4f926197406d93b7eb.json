{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    terms: Array,\n    termsPerPlayer: Number,\n    players: Array\n  },\n  data: function data() {\n    return {\n      selectedPlayer: 0,\n      newTerm: \"\",\n      playersFiltered: [],\n      snackbar: false,\n      snackbarText: 'New term added.'\n    };\n  },\n  methods: {\n    selectPlayer: function selectPlayer(id) {\n      this.selectedPlayer = id;\n    },\n    submitTerm: function submitTerm() {\n      this.$emit('submitTerm', [this.newTerm, this.players[this.selectedPlayer]]);\n      this.termPlayer = null;\n      this.newTerm = \"\";\n      this.snackbar = true;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;EACAA;IACAC,YADA;IAEAC,sBAFA;IAGAC;EAHA,CADA;EAMAC,IANA,kBAMA;IACA;MACAC,iBADA;MAEAC,WAFA;MAGAC,mBAHA;MAKAC,eALA;MAMAC;IANA;EASA,CAhBA;EAkBAC;IACAC,YADA,wBACAC,EADA,EACA;MACA;IACA,CAHA;IAKAC,UALA,wBAKA;MACA;MACA;MACA;MACA;IACA;EAVA;AAlBA","names":["props","terms","termsPerPlayer","players","data","selectedPlayer","newTerm","playersFiltered","snackbar","snackbarText","methods","selectPlayer","id","submitTerm"],"sourceRoot":"src/components/games/charades/setup","sources":["SetupTerms.vue"],"sourcesContent":["<template>\n    <div class=\"small-box rounded-xl pa-4\">\n        <v-card\n            color=\"background lighten-0\"\n            elevation=\"0\"\n            class=\"rounded-xl text-center\"\n        >\n            <h3 class=\"text-center mb-3\">Enter terms to guess</h3>\n\n            <div class=\"d-flex flex-wrap\">\n                <div\n                    v-for=\"(player, id) in players\"\n                    :key=id\n                    v-show=\"terms.map(x => x[1]).filter(name => name == player).length < 3\"\n                    :class=\"['player-selection',selectedPlayer == id ? 'isSelected' : '', 'px-3', 'py-2', 'ma-1']\"\n                    @click=\"selectPlayer(id)\"\n                >\n                    {{player}}\n                </div>\n            </div>\n\n            <v-text-field\n                placeholder= \"New Term\"\n                \n                color=\"secondary darken-1\"\n                class=\"my-2\"\n                v-model=\"newTerm\"\n                @keydown.enter=\"submitTerm\"\n            ></v-text-field>\n            <v-btn\n                elevation=\"0\"\n                class=\"rounded-lg\"\n                color=\"secondary darken-1\"\n                @click=\"submitTerm\"\n                :disabled=\"!newTerm || terms.map(x=>x[1]).filter(name=>name==players[selectedPlayer]).length>=3\"\n            >Submit</v-btn>\n        </v-card>\n\n            <!-- Display a snackbar message whena term is added-->\n            <v-snackbar\n                v-model=\"snackbar\"\n                timeout=2000\n                >\n                {{ snackbarText }}\n            </v-snackbar>\n\n        \n    </div>\n</template>\n\n<script>\n\nexport default {\n    props: {\n        terms: Array,\n        termsPerPlayer: Number,\n        players: Array,\n    },\n    data(){\n        return {\n            selectedPlayer: 0,\n            newTerm: \"\",\n            playersFiltered: [],\n\n            snackbar: false,\n            snackbarText: 'New term added.',\n\n        }\n    },\n\n    methods: {\n        selectPlayer(id){\n            this.selectedPlayer = id\n        },\n\n        submitTerm(){\n            this.$emit('submitTerm', [this.newTerm, this.players[this.selectedPlayer]])\n            this.termPlayer = null\n            this.newTerm = \"\" \n            this.snackbar = true\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .player-selection{\n        background: var(--v-background-base);\n        border-radius: 15px;\n        transition: all .2s;\n        line-height: 1.2em;\n        box-shadow: \n            inset 5px 5px 10px var(--v-background-darken1),\n            inset -5px -5px 10px var(--v-background-lighten1)\n            ;\n    }\n    .isSelected {\n        background: var(--v-secondary-darken1);\n        color: white;\n        box-shadow: 0px 0px 20px var(--v-secondary-lighten1)\n    }\n</style>"]},"metadata":{},"sourceType":"module"}